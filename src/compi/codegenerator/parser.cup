package compi.logic;
import java_cup.runtime.*;

terminal            ADD, MINUS, TIMES, DIV, LPAREN, RPAREN, SEMICOLON, EQUALS, LBRACE, RBRACE, AND, OR, DIF, LESS, GREATER, ASSIGN, LITERAL;
terminal            MAIN, IF, WHILE, ELSE, PUTW, PUTS, INT, BREAK;
terminal Integer    INTEGER;
terminal Boolean    BOOLEAN;
terminal String     ID;


non terminal        mainProgram, lstDeclaration, declaration, lstStatement, statement, ifStatement, whileStatement, condition, expr;

precedence left ADD, MINUS;
precedence left TIMES, DIV, LPAREN, RPAREN;
precedence left EQUALS, GREATER, LESS, AND, OR, DIF;


mainProgram ::=    lstDeclaration MAIN LPAREN RPAREN LBRACE lstStatement RBRACE {: System.out.println("main"); :};

lstStatement ::=    lstStatement statement
                    |statement
                    ;

statement ::=   expr SEMICOLON
                | ifStatement
                | whileStatement
                ;

ifStatement ::=     IF LPAREN expr RPAREN LBRACE lstStatement RBRACE ELSE LBRACE lstStatement RBRACE
                    | IF LPAREN expr RPAREN LBRACE lstStatement RBRACE
                    ;

whileStatement ::=  WHILE LPAREN expr RPAREN LBRACE lstStatement RBRACE;

lstDeclaration ::=  lstDeclaration declaration SEMICOLON
                    |declaration SEMICOLON
                    ;

declaration ::=     INT ID
                                {: System.out.println("int id"); :}
                    | INT ID ASSIGN expr
                                {: System.out.println("int id = expr"); :}
                    | ID ASSIGN expr
                                {: System.out.println("id = expr"); :}
                    ;

condition ::=   expr:e1 EQUALS expr:e2 
                                {: System.out.println("igual"); :}
                | expr:e1 GREATER expr:e2 
                                {: System.out.println("mayor"); :}
                | expr:e1 LESS expr:e2 
                                {: System.out.println("menor"); :}
                | expr:e1 AND expr:e2 
                                {: System.out.println("and"); :}
                | expr:e1 OR expr:e2 
                                {: System.out.println("or"); :}
                | expr:e1 DIF expr:e2 
                                {: System.out.println("diferente"); :}
                | BOOLEAN  
                                {: System.out.println("boolean"); :} 
                ;


expr    ::=     expr:e1 ADD expr:e2 
                                {: System.out.println("suma"); :}
                | expr:e1 MINUS expr:e2 
                                {: System.out.println("resta"); :}
                | expr:e1 TIMES expr:e2 
                                {: System.out.println("multiplicacion"); :}
                | expr:e1 DIV expr:e2 
                                {: System.out.println("division"); :}
                | LPAREN expr:e RPAREN
                                 {: System.out.println("parentesis"); :}
                | PUTS LPAREN expr RPAREN
                                {: System.out.println("puts"); :}
                | PUTS LPAREN LITERAL RPAREN
                                {: System.out.println("puts"); :}
                | PUTW LPAREN expr RPAREN
                                {: System.out.println("putw"); :}
                | BREAK
                                {: System.out.println("break"); :}
                | declaration
                                {::}
                | condition
                                {::}
                | ID
                                {: System.out.println("id"); :}
                | LITERAL
                                {: System.out.println("literal"); :}
                | INTEGER   
                                {: System.out.println("num"); :}
              
                ;
